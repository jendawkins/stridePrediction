' Luke Mooney
' 12/14/2013
' Custom Close Loop Control

'set parameters
'R = .386 'ohms  'resistance
'Kb = 346 rpm/V  mm
'Kt = .0276 'Nm/A
'V = R*T/kt+kb
'J = 33e-7 'kgm^3


scale = 1000 'torque inverse scaling factor

momarm = 230 'lever arm length
drivepulley = 14
spoolpulley = 44
spoolrad = 4
trans = momarm*spoolpulley/drivepulley/spoolrad'transmission ratio

powcoef = 400 'linear coef during controlled dorsiflexion
powinsert = 800*scale 'power inserted at beginning of PF
clkang = 2000*trans/360 'motor clicks per ankle angle, 2000 clicks/rot / 360 deg * transmisson ratio
bluetooth = -1
DFtime = 420 'Malcolm has 43%, been using 45%
PFpercTime = 490 'percent of gait cycle to initiate PF
subjMass = 60
percTotalPower = 90

setcommand(_var,1,percTotalPower)
setcommand(_var,2,subjMass)
setcommand(_var,3,PFpercTime)
setcommand(_var,4,trans)

setcommand(_var,5,bluetooth)


refMaxPFpower = subjMass*3*percTotalPower/100
maxDF = 5*clkang 'Maximum dorsiflexion allowed by the string
Bv = getvalue(_volts,2) 'battery volts x10
torque = 0
speedcoef = 100
effic = 65 '100xeffic

setcommand(_C,1,0) 'Zero Encoder


'Timer that counts down
settimercount(1,3600000)
settimerstate(1,0)

state = -1 'Start in controlled dorsiflexion
t0 = 0
time0 = 0
hstime = 0 'heel strike time
maxTorque = 0
steps = 1
velCounter = 0
swingTime = 0
varCounter = 0

'Filter Parameters
Dim aFilt[3] as Integer
Dim bFilt[3] as Integer
'Lowpass Butterworth 6Hz cutoff at 250Hz sampling
aFilt[0] = 10000 'x10000
aFilt[1] = -17874 'x10000
aFilt[2] = 8079 'x10000
bFilt[0] = 5129 'x1000000
bFilt[1] = 10259 'x1000000
bFilt[2] = 5129 'x1000000


Dim accv[5] as Integer
Dim acch[5] as Integer
accv[0] = 0
accv[1] = 0
accv[2] = 0
accv[3] = 0
accv[4] = 0

acch[0] = 0
acch[1] = 0
acch[2] = 0
acch[3] = 0
acch[4] = 0


Dim gyro[3] as Integer
gyro[0] = 0
gyro[1] = 0
gyro[2] = 0


Dim gyroFilt[3] as Integer
gyroFilt[0] = 0
gyroFilt[1] = 0
gyroFilt[2] = 0


curpos = 0
curspd = 0
curacc = 0
power = 0
accvsum = 0
acchsum = 0
gyrosum = 0
jerkv = 0
jerkh = 0
steptime = 1000
gyrozero = getvalue(_AI,6)
gyrozerosum = 0
maxPFpower = -1
maxPFpowerTime = 0

shankang = 0

top:

	bluetooth = getvalue(_var,5) 'Turn printing on?
	time = 3600000-gettimercount(1) 'get current time in milliseconds
	statetimer = time-t0 'set the amount of time in the current state
	if time >= 3599999 then 'Reset the timer after an hour
		settimercount(1,3600000)
		settimerstate(1,0)
		t0 = t0-3600000
	end if


	'Update the accels and gyro
	if time<>time0 then
		accvsum = accvsum+getvalue(_AI,5)
		acchsum = acchsum+getvalue(_AI,4)
		gyrosum = gyrosum+getvalue(_AI,6)
		varCounter = varCounter+1

		curacc = (curspd-getvalue(_abspeed,1))*105/(time-time0) 'motor accl in rad/s^2
		curpos = getvalue(_abcntr,1) 'get the encoder position (clicks)
		curspd = getvalue(_abspeed,1) 'get the encoder velocity (RPM)
		power = (getvalue(_P)*Bv/100*curspd/13360-curspd*curspd/51650-curacc/100*curspd/28937)*effic/100 'Watts

		if time mod 4 = 0 then
			gyro[2] = gyro[1]
			gyro[1] = gyro[0]
			gyro[0] = -(gyrosum/varCounter-gyrozero)*317/10 'velocity in 10xdeg/s

			gyroFilt[2] = gyroFilt[1]
			gyroFilt[1] = gyroFilt[0]
			gyroFilt[0] = (bFilt[0]*gyro[0]+bFilt[1]*gyro[1]+bFilt[2]*gyro[2])/1000000-(aFilt[1]*gyroFilt[1]+aFilt[2]*gyroFilt[2])/10000 'Filt value

			accv[4] = accv[3]
			acch[4] = acch[3]
			accv[3] = accv[2]
			acch[3] = acch[2]
			accv[2] = accv[1]
			acch[2] = acch[1]
			accv[1] = accv[0]
			acch[1] = acch[0]
			accv[0] = accvsum/varCounter-840
			acch[0] = acchsum/varCounter-840

			jerkh = (acch[0]-acch[4])'jerk m/s3
			jerkv = (accv[0]-accv[4])'jerk m/s3

			shankang = shankang+gyro[0]/25 'shank angle in 100*deg


			accvsum = 0
			acchsum = 0
			gyrosum = 0
			varCounter = 0

			if gyroFilt[0]<-100 then
				velCounter = velCounter+1
			else
				velCounter = 0
			end if

			if velCounter>60 then
				swingTime = time
			end if

		end if

	end if

	'determine if a heel strike occured
	if (time-hstime>700 and time-swingTime<20 and gyroFilt[0]>=0 and state<>1) then
		steptime = time-hstime
		hstime = time
		shankang = 0
		if maxPFpower>0 then
			'Change the power timing based on last step
			if maxPFpowerTime*1000/steptime > PFpercTime+20 then
				DFtime  = DFtime-2
			elseif maxPFpowerTime*1000/steptime < PFpercTime-20 then
				DFtime = DFtime+2
			end if

			'change power magnitude based on last step
			if maxPFpower>refMaxPFpower+10 then
				powinsert = powinsert-10*scale
			elseif maxPFpower<refMaxPFpower-10 then
				powinsert = powinsert+10*scale
			end if
		end if
		maxPFpower = -1
	end if


	'State machine
	if state = -1 'Zeroing the Encoder

		tensionforce = statetimer/10
		if tensionforce>200 then
			tensionforce = 200
		end if

		if time<>time0 and statetimer<500 then
			gyrozerosum = gyrozerosum+getvalue(_AI,6)
		end if


		if statetimer>1000 then 'if neutral ankle position has been reached
			state = 3
			statetimer = 0
			t0 = time
			gyrozero = gyrozerosum/500
		end if

	elseif state = 0 then 'heel strike and controlled dorsiflexion

		tensionforce = 500-statetimer*2
		if tensionforce < 200 then
			tensionforce = 200
		end if

		torque = 0

		if time-hstime>700 then
			tensionforce = 100
			torque = 0
		end if

		'Go to plantar flexion if the following are met:
		'1: 'DFlimit' of dorsiflexion has been reached
		'2: The speed is in plantar flexion
		'3: Dorsiflexion has been
		if (time-hstime)<700 And (time-hstime)>DFtime And shankang>25*100 And gyroFilt[0]>20 then
			state = 1
			maxDF = curpos
			lastTorque = command*Bv/100*scale
			t0 = time
			statetimer = 0
		end if

	elseif state = 1 then 'powered plantar flexion

		PFtime = 200
		speedcoef = 0

		'quadratic power profile with peak at PFtime/2
		torque = lastTorque+powinsert-4*powinsert*(statetimer-PFtime/2)/PFtime*(statetimer-PFtime/2)/PFtime

		if curpos>maxPFang then
			maxPFang = curpos
		end if

		if power>maxPFpower then
			maxPFpowerTime = time-hstime
			maxPFpower = power
		end if

		'leave plantar flexion for the following:
		'1: current position is pass DF equilibrium angle
		'2: and current speed is less than 5 rpm in PF and been in PF for 200 ms
		'3: Or Toe sensor is off the ground and been in PF for 200 ms
		if statetimer>PFtime or curpos>maxDF+20*clkang then
			state = 2
			t0 = time
			statetimer = 0
			speedcoef = 0
		end if

	elseif state = 2 then 'swing state

		speedcoef = 0
		tswing = 150
		SWGang = maxDF-1*clkang

		kgain = 30
		if statetimer<tswing then
			refang = maxPFang-(maxPFang-SWGang)*statetimer/tswing
			tensionforce = (refang-curpos)*kgain/100
		elseif statetimer<400 then
			tensionforce = (SWGang-curpos)*kgain/1000
		else
			tensionforce = 100
		end if


		'kgain = 4
		'if statetimer<tswing/2 then
		'	refang = maxPFang-2*(maxPFang-SWGang)*statetimer/tswing*statetimer/tswing
		'	tensionforce = (refang-curpos)*8/10
		'elseif statetimer<tswing then
		'	refang = SWGang+2*(maxPFang-SWGang)*(statetimer-tswing)/tswing*(statetimer-tswing)/tswing
		'	tensionforce = (refang-curpos)*2/10
		'elseif statetimer>250 then
		'	tensionforce = 50
		'else
		'	tensionforce = (SWGang-curpos)*1/10
		'end if

		torque = 0


		'Leave swing and go to DF for the following:
		'1: The heel makes contact and been in swing for 300 ms
		if (time-hstime<2) then
			state = 3
			t0 = time
			statetimer = 0
			maxPFang = 0
		end if

	elseif state = 3 then 'Update user variables
		percTotalPower = getvalue(_var,1)
		subjMass = getvalue(_var,2)
		PFpercTime = getvalue(_var,3)
		trans = getvalue(_var,4)

		clkang = 2000*trans/360
		refMaxPFpower = subjMass*3*percTotalPower/100

		Bv = getvalue(_volts,2) 'battery volts x10

		if Bv >500 then
			Bv = 500
		elseif Bv<440
			Bv = 440
		end if

		state = 0
		statetimer = 0
		t0 = time
		steps = steps+1
	end if


	if torque<0 then
			torque = 0
	end if

	momentforce = torque/scale

	if speedcoef<0 then
		speedcoef = 0
	elseif speedcoef > 100 then
		speedcoef = 100
	end if

	speedforce = (curspd)*100/346*speedcoef/100 '346 rpm/volt, converting rpm to command iu voltage

	'Sum of commanded torques
	command = (momentforce + speedforce + tensionforce)*100/Bv 'normalize for any battery voltage (/100 *1000 iu/48 volts * 480/Bv

	maxcommand = 1000 'safety for testing
	if command>maxcommand then
		command = maxcommand
	elseif command < -maxcommand then
		command = -maxcommand
	end if

	if curpos<0 and command<0 then
		command = 50
	end if

	curcommand = getvalue(_P)
	if command>curcommand+24 then
		command = curcommand+24
	elseif command<curcommand-24 then
		command = curcommand-24
	end if

	setcommand(_GO,command)


	'Print data to serial every 5 ms
	if bluetooth > 0 and (time <> time0) then
		if (time mod 12) = 0 then
			print("A",state,"z",time,"z",getvalue(_P),"\r")
		elseif (time mod 12) = 2 then
			print("B",curspd,"z",time,"z",curpos,"\r")
		elseif (time mod 12) = 4 then
			print("C",Bv,"z",time,"z",getvalue(_BA),"\r")
		elseif (time mod 12) = 6 then
			print("D",jerkv,"z",time,"z",gyroFilt[0],"\r")
		elseif (time mod 12) = 8 then
			print("E",power,"z",time,"z",accv[0],"\r")
		elseif (time mod 12) = 10 then
			print("F",shankang,"z",time,"z",hstime,"\r")
		end if
	end if

	time0 = time

goto top
